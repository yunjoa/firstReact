{"version":3,"sources":["comp/Bgmvibe.js","comp/Musicvideo.js","comp/Myfavorite.js","List.jsx","comp/PlayList.js","App.js","reportWebVitals.js","index.js"],"names":["Bgm","className","yutubeBgm","youtubeBgm","map","w","k","href","src","thumb","onairName","yutuber","updateDate","description","Musicvideo","Mv","link","width","height","title","frameborder","allow","allowfullscreen","musicTitle","artist","musicDescription","Myfav","useState","좋아요","좋아요추가","like","class","colSpan","MyFavoritesong","song","id","songName","album","songTime","onClick","List","listenlist","listens","listen","PlayList","setListens","newlisten","setNewlisten","action","type","name","onChange","e","target","value","preventDefault","App","basename","to","style","textDecoration","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37c2a2c4.chunk.js","sourcesContent":["import yutubeBgm from \"../data/Bgm.json\"\r\n\r\n\r\nexport default function Bgm(){\r\n  return(\r\n    <>\r\n      <div className=\"bgm-test\">\r\n        <h2 className=\"tit\"> Bgm Vibe</h2>\r\n\r\n        {yutubeBgm.youtubeBgm.map((w,k)=>(\r\n        <a href=\"\">\r\n          {/* 클릭시 링크 */}\r\n          <div className=\"bgm-comp\">\r\n            <picture>\r\n              <img src={w.thumb}/> \r\n              {/* 썸네일 */}\r\n            </picture>\r\n            <div className=\"about-bgm\">\r\n              <p>{w.onairName}</p>\r\n              <p>{w.yutuber}</p>\r\n              <p>{w.updateDate}</p>\r\n              <p>{w.description}</p>\r\n            </div>\r\n          </div>\r\n        </a>\r\n        ))}\r\n      </div>\r\n  \r\n    </>\r\n  )}","import Mv from \"../data/Mv.json\";\r\n\r\n\r\nexport default function Musicvideo(){\r\n\r\n  \r\n  return(\r\n    <>\r\n\r\n      <div className=\"mv-test\">\r\n      <h2 className=\"tit\"> Remarkable Music Video </h2>\r\n\r\n      {Mv.Mv.map((w,k)=>(\r\n      <div className=\"song-wrap\">\r\n        <a href={w.link}>\r\n          <iframe width=\"800\" height=\"450\" \r\n          src=\"https://www.youtube.com/embed/W8md8E5bOmg?controls=0&showinfo=0\" \r\n          title=\"YouTube video player\" \r\n          frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen/>\r\n          <div className=\"song-word\">\r\n            <p className=\"song-title\">{w.musicTitle}</p>\r\n            <p className=\"song-artist\">{w.artist}</p>\r\n            <p className=\"song-description\">{w.musicDescription}</p>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      ))\r\n      }\r\n\r\n      \r\n      </div>\r\n\r\n      \r\n    </>\r\n  )}\r\n\r\n","/* eslint-disable */\r\nimport { useState } from \"react\";\r\nimport MyFavoritesong from \"../data/Myfavoritesong.json\"\r\n\r\n\r\n\r\nexport default function Myfav(){\r\n\r\n  // let [songtr,setSongtr] = useState();\r\n\r\n  // function Songclick() {\r\n  //   setSongtr();\r\n  // }\r\n\r\n    let [btn,setBtn] = useState('.btn_see');\r\n    let [num,setNum] = useState(0);\r\n\r\n\r\n  // FIX-----------------------useState써야되는데.\r\n\r\n    function Share (event) {\r\n      if (!event.target.matches('.btn_see')) {\r\n        var dropdowns = document.getElementsByClassName(\"btn_share\");\r\n        var i;\r\n        for (i = 0; i < dropdowns.length; i++) {\r\n          var openDropdown = dropdowns[i];\r\n          if (openDropdown.classList.contains('show')) {\r\n            openDropdown.classList.remove('show');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    // let 미리듣기 = 미리듣기;\r\n    // let 미리 = [{w.songTime},미리듣기,  ]\r\n    // var songTime = document.querySelector(\".songtime\")\r\n    // let [songT, setsongT] = useState(songTime);\r\n    \r\n    \r\n    \r\n    // function 노래클릭() {\r\n    //   // event.preventDefault\r\n    //   console.log(songT)\r\n    //   setsongT ('미리듣기')\r\n    // }\r\n\r\n\r\n\r\n\r\n    let [좋아요, 좋아요추가] = useState(0);\r\n    function like () {\r\n      좋아요추가(좋아요+1);      \r\n    }\r\n\r\n\r\n  return(\r\n    <>\r\n\r\n\r\n      <div className=\"Myfav-wrap\">\r\n\r\n        <h2 className=\"tit\">My Favorite Song</h2>\r\n\r\n        <div class=\"table-wrap\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th colSpan=\"2\">Song</th>\r\n                <th>Artist</th>\r\n                <th>Album</th>\r\n                <th colSpan=\"3\">Time</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {MyFavoritesong.song.map((w,k)=>(\r\n                <tr id=\"songtr\" key={k}>\r\n                  <td className=\"thumb\">\r\n                    <div className=\"forplay\">\r\n                      <img className=\"album-cover\" src={w.thumb}/>\r\n                      <img className=\"btn_play\"src=\"img/play.svg\"/>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"song-name\">{w.songName}</td>\r\n                  <td className=\"artist\">{w.artist}</td>\r\n                  <td className=\"artist\">{w.album}</td>\r\n                  <td className=\"songtime\">{w.songTime}</td>\r\n                  <td className=\"like\" onClick={like}>♥ \r\n                    <code>{좋아요}</code>\r\n                  </td>\r\n                  <td className=\"btn-share\">\r\n                    <img\r\n                    className=\"btn_see\" src=\"img/see-more.svg\"/>\r\n                    <div className=\"btn_share\">\r\n                      <a href=\"\">twitter 공유</a>\r\n                      <a href=\"\">facebook 공유</a>\r\n                      <a href=\"\">link 복사</a>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                ))\r\n              }\r\n            </tbody>\r\n          </table>\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n  )}","import React from \"react\";\r\n\r\nconst List = ({listens}) => {\r\n  const listenlist = listens.map( listen => <li>{listen}</li>)\r\n  return(\r\n    <ul>\r\n        {listenlist}\r\n    </ul>\r\n\r\n  )\r\n}\r\n\r\nexport default List","import { useState } from \"react\";\r\nimport List from '../List';\r\n\r\n\r\nexport default function PlayList(){\r\n\r\n  const [listens, setListens] = useState(['방방탄']);\r\n  const [newlisten, setNewlisten] = useState();\r\n\r\n  const 데이터바꾸기 =(e) =>{\r\n    setNewlisten(e.target.value);\r\n  }\r\n\r\n  const 리스트추가 =(e) =>{\r\n    e.preventDefault();\r\n    setListens([...listens, newlisten]);\r\n  }\r\n  return(\r\n    \r\n    \r\n  <main>\r\n    <div className=\"playlist\">\r\n      <h2 className=\"tit\">Should Listen List</h2>\r\n      <form action=\"\">\r\n        <input type=\"text\" name=\"\" onChange={데이터바꾸기}/>\r\n        <button onClick={리스트추가}>음악추가</button>\r\n      </form>\r\n\r\n      <List listens={listens}/>\r\n\r\n\r\n    </div>\r\n  </main>\r\n\r\n\r\n      \r\n  )}\r\n\r\n","import './App.css';\nimport { BrowserRouter,Link,Switch,Route } from \"react-router-dom\";\nimport Bgm from \"./comp/Bgmvibe\";\nimport MusicVid from \"./comp/Musicvideo\";\nimport Myfav from \"./comp/Myfavorite\";\nimport PlayList from './comp/PlayList';\n\nfunction App() {\n  return (\n  <>\n\n\n\n\n    <BrowserRouter basename=\"/firstReact\">\n      <div className=\"nav\"> \n        <Link to=\"/\" style={{ \n          textDecoration: 'none' }}>\n          <h1>\n            <img src=\"img/me.svg\"/>\n          </h1>\n        </Link>\n        <Link to=\"/Myfavorite\" style={{ textDecoration: 'none' }}>\n          <p>My Favorite</p>\n        </Link>\n        <Link to=\"/Musicvideo\" style={{ textDecoration: 'none' }}>\n          <p>Music Video</p>\n        </Link>\n        <Link to=\"/Bgmvibe\" style={{ textDecoration: 'none' }}>\n          <p>Bgm Vibe</p>\n        </Link>\n        <Link to=\"/PlayList\" style={{ textDecoration: 'none' }}>\n          <p>Play List</p>\n        </Link>\n      </div>\n      \n    \n      <Switch>\n        <Route path=\"/MusicVideo\"> <MusicVid /></Route>\n        <Route path=\"/Bgmvibe\"> <Bgm /></Route>\n        <Route path=\"/Myfavorite\"> <Myfav /></Route>\n        <Route path=\"/PlayList\"> <PlayList /></Route>\n      </Switch>\n    </BrowserRouter>\n\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}